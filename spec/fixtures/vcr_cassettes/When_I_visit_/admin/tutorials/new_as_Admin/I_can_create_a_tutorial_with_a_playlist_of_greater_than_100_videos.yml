---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE_API_KEY>&maxResults=50&part=snippet,contentDetails&playlistId=PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Mon, 11 May 2020 22:31:00 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "kind": "youtube#playlistItemListResponse",
  "etag": "G3Lpu4cPuEfcLFujYjCMj1ADiVQ",
  "nextPageToken": "CDIQAA",
  "items": [
    {
      "kind": "youtube#playlistItem",
      "etag": "qYMee44xcvmBbw6zvzuc0Dm_v4M",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yMUQyQTQzMjRDNzMyQTMy",
      "snippet": {
        "publishedAt": "2017-05-12T13:24:06Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Mama Cat Carrying Baby Kittens Videos Compilation 2017",
        "description": "#Bravecto #anipetshop.com\n✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n--------------------------\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ayGwg0RvxDg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ayGwg0RvxDg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ayGwg0RvxDg/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 0,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ayGwg0RvxDg"
        }
      },
      "contentDetails": {
        "videoId": "ayGwg0RvxDg",
        "videoPublishedAt": "2017-05-12T13:26:42Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Eeqep209J59gCiBtRZNZ9NgtlNs",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41NkI0NEY2RDEwNTU3Q0M2",
      "snippet": {
        "publishedAt": "2017-02-20T06:18:32Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So Cute! Funny Cats In Water Videos Compilation 2017",
        "description": "So Cute! Funny Cats In Water Videos Compilation 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video https://goo.gl/Bv3tiW\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞https://goo.gl/Bv3tiW -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/yv4vyopy_58/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/yv4vyopy_58/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/yv4vyopy_58/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/yv4vyopy_58/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 1,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "yv4vyopy_58"
        }
      },
      "contentDetails": {
        "videoId": "yv4vyopy_58",
        "videoPublishedAt": "2017-02-20T06:20:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "AgB_BLpQsRa-TnvlIACtdNzq9XA",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yODlGNEE0NkRGMEEzMEQy",
      "snippet": {
        "publishedAt": "2017-02-20T14:17:48Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "CATS vs BALLOONS - Funny Cats Popping Balloons Compilation 2017",
        "description": "CATS vs BALLOONS - Funny Cats Popping Balloons Compilation 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video https://goo.gl/Bv3tiW\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞https://goo.gl/Bv3tiW -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/gIetsRkH7c4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/gIetsRkH7c4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/gIetsRkH7c4/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 2,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "gIetsRkH7c4"
        }
      },
      "contentDetails": {
        "videoId": "gIetsRkH7c4",
        "videoPublishedAt": "2017-02-20T14:19:29Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "s9i_I1OENoYZ4ehnld81Z-8pkbk",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wMTcyMDhGQUE4NTIzM0Y5",
      "snippet": {
        "publishedAt": "2017-02-25T08:55:20Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Kittens And Funny Kitten Videos Compilation 2017",
        "description": "Cute Kittens And Funny Kitten Videos Compilation 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video https://goo.gl/Bv3tiW\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞https://goo.gl/Bv3tiW -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Ho97SKP02Js/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Ho97SKP02Js/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Ho97SKP02Js/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Ho97SKP02Js/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Ho97SKP02Js/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 3,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Ho97SKP02Js"
        }
      },
      "contentDetails": {
        "videoId": "Ho97SKP02Js",
        "videoPublishedAt": "2017-02-25T10:01:55Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MyGel8W9J6uCxFSMcE8Xvme6Jvw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4xMkVGQjNCMUM1N0RFNEUx",
      "snippet": {
        "publishedAt": "2017-04-18T13:26:15Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Dogs and Cats Begging For Food - Funny Dog & Cat Videos 2017",
        "description": "Funny Dogs and Cats Begging For Food - Funny Dog & Cat Videos 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/mx9B2Tw3C3g/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/mx9B2Tw3C3g/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/mx9B2Tw3C3g/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 4,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "mx9B2Tw3C3g"
        }
      },
      "contentDetails": {
        "videoId": "mx9B2Tw3C3g",
        "videoPublishedAt": "2017-04-18T13:28:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "nolvTHn0D3SVOXdzmK5cmruiAXM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41MzJCQjBCNDIyRkJDN0VD",
      "snippet": {
        "publishedAt": "2017-04-19T14:30:47Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cats And Kittens Who Don't Want To Share Their Food - Cats Protecting Their Food 2017",
        "description": "Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/gdGcNBIoc_o/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/gdGcNBIoc_o/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/gdGcNBIoc_o/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/gdGcNBIoc_o/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 5,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "gdGcNBIoc_o"
        }
      },
      "contentDetails": {
        "videoId": "gdGcNBIoc_o",
        "videoPublishedAt": "2017-04-19T14:35:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "wToUDXVegP6uAQM6HasTEktORZQ",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DQUNERDQ2NkIzRUQxNTY1",
      "snippet": {
        "publishedAt": "2017-04-20T13:42:40Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Dogs and Cats : '' Sleepy, Falls and Clumsy & Jump Fail '' Compilation 2017",
        "description": "Funny Dogs and Cats : '' Sleepy, Falls and Clumsy & Jump Fail '' Compilation 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/qB7AmdtIrEY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/qB7AmdtIrEY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/qB7AmdtIrEY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 6,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "qB7AmdtIrEY"
        }
      },
      "contentDetails": {
        "videoId": "qB7AmdtIrEY",
        "videoPublishedAt": "2017-04-20T13:47:54Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "pF20otlcWsdjPJ2tSSldrFXNt8M",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GNjNDRDREMDQxOThCMDQ2",
      "snippet": {
        "publishedAt": "2017-04-22T13:39:42Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats Protecting Babies Videos Compilation 2017 - Cat Loves Babies",
        "description": "Cats Protecting Babies Videos Compilation 2017 - Cat Loves Babies\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/pgOzEjMaJT8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/pgOzEjMaJT8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/pgOzEjMaJT8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/pgOzEjMaJT8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/pgOzEjMaJT8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 7,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "pgOzEjMaJT8"
        }
      },
      "contentDetails": {
        "videoId": "pgOzEjMaJT8",
        "videoPublishedAt": "2017-04-22T13:41:57Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MUYn0gGTcgBOX5dLbiZa5vHvwfg",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EMEEwRUY5M0RDRTU3NDJC",
      "snippet": {
        "publishedAt": "2017-04-24T14:32:02Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Babies Laughing at Cats Compilation 2017 - Cats Loves Babies Video",
        "description": "Funny Babies Laughing at Cats Compilation 2017 - Cats Loves Babies Video\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/aaD9Pk8OW68/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/aaD9Pk8OW68/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/aaD9Pk8OW68/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 8,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "aaD9Pk8OW68"
        }
      },
      "contentDetails": {
        "videoId": "aaD9Pk8OW68",
        "videoPublishedAt": "2017-04-24T14:34:20Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "s88f-Al0XW1VvE8-qtkYc9Lm2WY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41Mzk2QTAxMTkzNDk4MDhF",
      "snippet": {
        "publishedAt": "2017-05-05T15:11:18Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute and Funny Dog and Cat Vs Mirror Videos 2017",
        "description": "Cute and Funny Dog and Cat Vs Mirror Videos 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/iK4VxGkl2ak/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/iK4VxGkl2ak/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/iK4VxGkl2ak/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 9,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "iK4VxGkl2ak"
        }
      },
      "contentDetails": {
        "videoId": "iK4VxGkl2ak",
        "videoPublishedAt": "2017-05-05T15:13:55Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "5wTn078zkEW5Qq5ddrXihWQjD3E",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EQUE1NTFDRjcwMDg0NEMz",
      "snippet": {
        "publishedAt": "2017-05-08T13:24:49Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats Massage Their Owners - The Best Service In The World Video 2017",
        "description": "Cats Massage Their Owners - The Best Service In The World Video 2017\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \nSubscribe for new video:  http://goo.gl/Koxcb0\nFapage: http://goo.gl/8JZskX\n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/JxflkfqcnyM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/JxflkfqcnyM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/JxflkfqcnyM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/JxflkfqcnyM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/JxflkfqcnyM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 10,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "JxflkfqcnyM"
        }
      },
      "contentDetails": {
        "videoId": "JxflkfqcnyM",
        "videoPublishedAt": "2017-05-08T13:28:21Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "pGf1_Y2vgJglKaCVCsGFK2NkU7c",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41QTY1Q0UxMTVCODczNThE",
      "snippet": {
        "publishedAt": "2017-05-11T13:41:44Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "The Amazing Cats Hugs Kitten ►Mom Cat Hugging and Kissing Baby Kittens Video Compilation 2017",
        "description": "★ ★ BUY NOW: https://luxbrand.co/ OR https://int.luxbrand.co/  \n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/SB_EB_kLsAw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/SB_EB_kLsAw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/SB_EB_kLsAw/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 11,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "SB_EB_kLsAw"
        }
      },
      "contentDetails": {
        "videoId": "SB_EB_kLsAw",
        "videoPublishedAt": "2017-05-11T13:44:43Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "hpRP0Nqezyw8tIuul4TrXodnJqY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45RTgxNDRBMzUwRjQ0MDhC",
      "snippet": {
        "publishedAt": "2017-05-13T13:06:14Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cat Like Licking Compilation 2017 [NEW]",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n Fapage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/kTnYYlGobZg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/kTnYYlGobZg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/kTnYYlGobZg/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 12,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "kTnYYlGobZg"
        }
      },
      "contentDetails": {
        "videoId": "kTnYYlGobZg",
        "videoPublishedAt": "2017-05-13T13:08:38Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ecK3oEeMIEoPbqhBliux0WYYGhk",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ENDU4Q0M4RDExNzM1Mjcy",
      "snippet": {
        "publishedAt": "2017-05-14T13:27:20Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Lovely Moment of Cat When They're Sleepy - Funny Cats Video 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n  Fanpage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/nPeAMKE1GCU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/nPeAMKE1GCU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/nPeAMKE1GCU/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 13,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "nPeAMKE1GCU"
        }
      },
      "contentDetails": {
        "videoId": "nPeAMKE1GCU",
        "videoPublishedAt": "2017-05-14T13:29:32Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "YN1msh8meHcTTBqwTeE_VzfQTGo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yMDhBMkNBNjRDMjQxQTg1",
      "snippet": {
        "publishedAt": "2017-05-15T13:30:44Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat and New Puppy Meeting For The First Time Videos Compilation 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n  Fapage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ubrVqLES5O4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ubrVqLES5O4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ubrVqLES5O4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ubrVqLES5O4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ubrVqLES5O4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 14,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ubrVqLES5O4"
        }
      },
      "contentDetails": {
        "videoId": "ubrVqLES5O4",
        "videoPublishedAt": "2017-05-15T13:32:48Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "KCdTnCaLBPYab2CcPJaqJVSK_Eo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GM0Q3M0MzMzY5NTJFNTdE",
      "snippet": {
        "publishedAt": "2017-05-16T13:12:19Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cat and Dog & Monkey Getting A Haircut Videos 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n  Fapage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/UZDK7tOvMhY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/UZDK7tOvMhY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/UZDK7tOvMhY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/UZDK7tOvMhY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/UZDK7tOvMhY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 15,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "UZDK7tOvMhY"
        }
      },
      "contentDetails": {
        "videoId": "UZDK7tOvMhY",
        "videoPublishedAt": "2017-05-16T13:17:32Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "QQr3xQAe_p8-X5lDZtcoCzjWIaw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zRjM0MkVCRTg0MkYyQTM0",
      "snippet": {
        "publishedAt": "2017-05-20T13:49:28Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat and Kittens Vs Chihuahua Are Best Friend - Cats Loves Chihuahua",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fapage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/A0AgbeOS55c/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/A0AgbeOS55c/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/A0AgbeOS55c/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 16,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "A0AgbeOS55c"
        }
      },
      "contentDetails": {
        "videoId": "A0AgbeOS55c",
        "videoPublishedAt": "2017-05-20T13:51:49Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ni1D6dISRLhfQCrbTH1KJ68SHkM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45NzUwQkI1M0UxNThBMkU0",
      "snippet": {
        "publishedAt": "2017-05-23T13:21:43Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "The Funniest and Most Humorous Cat Trying to Steal Fish - Funny Cats compilation",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fapage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/eNcaMdcrsSQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/eNcaMdcrsSQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/eNcaMdcrsSQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/eNcaMdcrsSQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/eNcaMdcrsSQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 17,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "eNcaMdcrsSQ"
        }
      },
      "contentDetails": {
        "videoId": "eNcaMdcrsSQ",
        "videoPublishedAt": "2017-05-23T13:37:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "mSHYWurslwsfrbGvl4c_X50Kdm4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DNzE1RjZEMUZCMjA0RDBB",
      "snippet": {
        "publishedAt": "2017-06-02T15:23:55Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Labrador Playing and Kissing Cat - Dogs and Cats Loving Compilation 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fanpage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/C8F5Vkbcsco/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/C8F5Vkbcsco/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/C8F5Vkbcsco/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/C8F5Vkbcsco/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/C8F5Vkbcsco/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 18,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "C8F5Vkbcsco"
        }
      },
      "contentDetails": {
        "videoId": "C8F5Vkbcsco",
        "videoPublishedAt": "2017-06-02T15:27:39Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8uozBQBcBALHGEAyEbf1YX0XLOY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43MTI1NDIwOTMwQjIxMzNG",
      "snippet": {
        "publishedAt": "2017-06-03T12:55:02Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "French Bulldog loves Cat - French Bulldog Vs Cats Videos 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fanpage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/wVC9izw77ww/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/wVC9izw77ww/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/wVC9izw77ww/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 19,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "wVC9izw77ww"
        }
      },
      "contentDetails": {
        "videoId": "wVC9izw77ww",
        "videoPublishedAt": "2017-06-03T12:59:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "aB9BPmPM9wrruB6gEUHM3YEXxmY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DQ0MyQ0Y4Mzg0M0VGOEYw",
      "snippet": {
        "publishedAt": "2017-06-08T13:50:45Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Dog and Cat VS Fan Videos Compilation 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fanpage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ZhZr52creEI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ZhZr52creEI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ZhZr52creEI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ZhZr52creEI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ZhZr52creEI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 20,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ZhZr52creEI"
        }
      },
      "contentDetails": {
        "videoId": "ZhZr52creEI",
        "videoPublishedAt": "2017-06-08T13:53:18Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "zoNl0vkZ5MzlNnFI5oj7DYAacm8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yQUE2Q0JEMTk4NTM3RTZC",
      "snippet": {
        "publishedAt": "2017-06-15T14:49:58Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Top 14 most beautiful friendships of Cats Video 2017",
        "description": "Subscribe for new video:  http://goo.gl/Koxcb0\n   Fanpage: http://goo.gl/8JZskX\nThanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\nFunny Dogs Compilation➞https://goo.gl/29ZcCa\nFunny Dogs and Babies➞https://goo.gl/Y6jp3b\nFunny Animals➞https://goo.gl/JYX2xX\nTouching Video➞https://goo.gl/dFNJAx\nCute Dogs Video➞https://goo.gl/IMSIue\nFunny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nP/s: Thanks for watching video ! Don't forget subscribe my channel \n➞http://goo.gl/Koxcb0 -----------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/RWb9E3d_t7k/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/RWb9E3d_t7k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/RWb9E3d_t7k/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 21,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "RWb9E3d_t7k"
        }
      },
      "contentDetails": {
        "videoId": "RWb9E3d_t7k",
        "videoPublishedAt": "2017-06-15T14:52:55Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "K2aGTgyQqenTVDZL4O0JhvnrppY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DMkU4NTY1QUFGQTYwMDE3",
      "snippet": {
        "publishedAt": "2017-07-17T13:05:22Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Soo Cute! Cats and dogs wants to be held like baby",
        "description": "★ ★ BUY NOW: https://luxbrand.co/ OR https://int.luxbrand.co/  \n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/aUDSJKzQpZ8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/aUDSJKzQpZ8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/aUDSJKzQpZ8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/aUDSJKzQpZ8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/aUDSJKzQpZ8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 22,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "aUDSJKzQpZ8"
        }
      },
      "contentDetails": {
        "videoId": "aUDSJKzQpZ8",
        "videoPublishedAt": "2017-07-17T13:10:40Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "bQS2m-gVdbv2kewm7KscbarZrAI",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44Mjc5REFBRUE2MTdFRDU0",
      "snippet": {
        "publishedAt": "2017-08-27T07:20:42Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Father Cat Supports Mom Cat Giving Birth, A very happy family.",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nSource video:\nhttps://www.youtube.com/watch?v=Ao1OR8oNLCk\nhttps://www.youtube.com/watch?v=j-fNX3wodqY\nhttps://www.youtube.com/watch?v=yIQBxjiRX8w\nhttps://www.youtube.com/watch?v=lTEs1qcwXEI\nhttps://www.youtube.com/watch?v=hTwPNo3Or9c\nhttps://www.youtube.com/watch?v=m58MUIfuwyM\nhttps://www.youtube.com/watch?v=Lsul_w1wc4I\n---------------------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/PypNU5Cnz28/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/PypNU5Cnz28/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/PypNU5Cnz28/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/PypNU5Cnz28/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 23,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "PypNU5Cnz28"
        }
      },
      "contentDetails": {
        "videoId": "PypNU5Cnz28",
        "videoPublishedAt": "2017-08-27T07:25:55Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "bIekTga9XG-zvqygdNeSdYlHZyw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43NDhFRTgwOTRERTU4Rjg3",
      "snippet": {
        "publishedAt": "2017-08-28T08:51:30Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Three and Two mother cats helping each other raise baby kittens",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\nSource video:\nhttps://www.youtube.com/watch?v=Q7cd1auW-fc\nhttps://www.youtube.com/watch?v=jIVYowqreWo\nhttps://www.youtube.com/watch?v=V61_gtqlcvE\nhttps://www.youtube.com/watch?v=kCsHDhxbLHI\n----------------------------------------------------------------\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/00TOpGkpJzo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/00TOpGkpJzo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/00TOpGkpJzo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/00TOpGkpJzo/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 24,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "00TOpGkpJzo"
        }
      },
      "contentDetails": {
        "videoId": "00TOpGkpJzo",
        "videoPublishedAt": "2017-08-28T08:58:21Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "uH3WlhfbH-HRma3vUxii8wSf3ko",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41QUZGQTY5OTE4QTREQUU4",
      "snippet": {
        "publishedAt": "2017-09-01T12:13:32Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat massage Dogs and Cats - Cute Kittens",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n---------------------------------------------------------------\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n----------------------------------------------------------------\n\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/g2AIrZNiT84/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/g2AIrZNiT84/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/g2AIrZNiT84/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/g2AIrZNiT84/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/g2AIrZNiT84/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 25,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "g2AIrZNiT84"
        }
      },
      "contentDetails": {
        "videoId": "g2AIrZNiT84",
        "videoPublishedAt": "2017-09-01T12:16:33Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "iLgEsQYuwbD07yxYMm2vU6EDg-k",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zRDBDOEZDOUM0MDY5NEEz",
      "snippet": {
        "publishedAt": "2017-09-27T12:36:00Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat Answers Phone '20th century'",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=oxm8ph2tfpY\nhttps://www.youtube.com/watch?v=JxqXnXm3nEk\nhttps://www.youtube.com/watch?v=k8BRqftU1nw\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/FXhetzfCHD0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/FXhetzfCHD0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/FXhetzfCHD0/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 26,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "FXhetzfCHD0"
        }
      },
      "contentDetails": {
        "videoId": "FXhetzfCHD0",
        "videoPublishedAt": "2017-09-27T12:38:37Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "KxUVRk-ra1N8C8_i5TBoEKuMG8E",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CMEQ2Mjk5NTc3NDZFRUNB",
      "snippet": {
        "publishedAt": "2017-09-30T09:56:05Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cats Vs Toilet Paper Compilation 2017 - Funny Cat Videos",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=OG-taqqeM6I\nhttps://www.youtube.com/watch?v=1Z9YNmCIscs\nhttps://www.youtube.com/watch?v=0z-hJ-NESuc\nhttps://www.youtube.com/watch?v=e-hcxW0Miu4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/pM8RT5DwGsw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/pM8RT5DwGsw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/pM8RT5DwGsw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/pM8RT5DwGsw/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 27,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "pM8RT5DwGsw"
        }
      },
      "contentDetails": {
        "videoId": "pM8RT5DwGsw",
        "videoPublishedAt": "2017-09-30T12:00:07Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "-AfgxpPLbXO-o50AH2QpSZKzzq4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42MTI4Njc2QjM1RjU1MjlG",
      "snippet": {
        "publishedAt": "2017-10-05T12:11:47Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cat Trap Compilation 2017 - Funny Cats Videos",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=CyWgvLV63GA\nhttps://www.youtube.com/watch?v=mp1GsPEHyJg\nhttps://www.youtube.com/watch?v=mk36eWEtQQk\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/tGVSSQR9bOo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/tGVSSQR9bOo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/tGVSSQR9bOo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 28,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "tGVSSQR9bOo"
        }
      },
      "contentDetails": {
        "videoId": "tGVSSQR9bOo",
        "videoPublishedAt": "2017-10-05T12:15:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "D0hMHI9aUtkt9izFjkP12zUqH8c",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45RjNFMDhGQ0Q2RkFCQTc1",
      "snippet": {
        "publishedAt": "2017-10-10T12:32:33Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat and Kitten Vs Tail Compilation 2017 - Funny Cats Video",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=JARU-qJG5cc\nhttps://www.youtube.com/watch?v=mPHQv-K_qTc\nhttps://www.youtube.com/watch?v=sUVC60PJFT4\nhttps://www.youtube.com/watch?v=lf_1HFz9sRI\nhttps://www.youtube.com/watch?v=B5-Os0EHTVA\nhttps://www.youtube.com/watch?v=KwUquhz_vgg\nhttps://www.youtube.com/watch?v=GkRcX57vvkY\nhttps://www.youtube.com/watch?v=2DBjVDpkNQI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/jX0Fdj6j5UM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/jX0Fdj6j5UM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/jX0Fdj6j5UM/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 29,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "jX0Fdj6j5UM"
        }
      },
      "contentDetails": {
        "videoId": "jX0Fdj6j5UM",
        "videoPublishedAt": "2017-10-10T12:35:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "s6naZdm_vFBILuh0rW-xptxCYEQ",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC40QTA3NTU2RkM1QzlCMzYx",
      "snippet": {
        "publishedAt": "2017-10-19T12:06:30Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats ring a bell and ask for food! Bring me food!",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=-ANFzJsdut0\nhttps://www.youtube.com/watch?v=msgE9oUgjkM\nhttps://www.youtube.com/watch?v=lwGvB2r9Mac\nhttps://www.youtube.com/watch?v=QMB18VDWTY4\nhttps://www.youtube.com/watch?v=JSGVH7NeqQU\nhttps://www.youtube.com/watch?v=uk2mQojI3t4\nhttps://www.youtube.com/watch?v=j9Vetlfb8wU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vC1Qg297Ceo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vC1Qg297Ceo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vC1Qg297Ceo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 30,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vC1Qg297Ceo"
        }
      },
      "contentDetails": {
        "videoId": "vC1Qg297Ceo",
        "videoPublishedAt": "2017-10-19T12:08:52Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Os0rmVt1cDLDH1MaKNW_PwjuImY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5BRjJDODk5REM0NjkzMUIy",
      "snippet": {
        "publishedAt": "2017-10-24T13:05:39Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats and Dogs in Halloween Costumes Videos 2017",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=1bKLfiY_jnQ\nhttps://www.youtube.com/watch?v=T7IhhdFAmy0\nhttps://www.youtube.com/watch?v=ybAxNamlRNM\nhttps://www.youtube.com/watch?v=xHcPFC4z8GM\nhttps://www.youtube.com/watch?v=IhuxwtaJcFY\nhttps://www.youtube.com/watch?v=9qFY7uKcSoI\nhttps://www.youtube.com/watch?v=MZlNQrPuQaU\nhttps://www.youtube.com/watch?v=6p9Kl5GAxTo\nhttps://www.youtube.com/watch?v=ORTQy7rTepY\nhttps://www.youtube.com/watch?v=fcLEsMruiuU\nhttps://www.youtube.com/watch?v=bTWIXs7rdXo\nhttps://www.youtube.com/watch?v=fT4SDHQNZTw\nhttps://www.youtube.com/watch?v=GCVKkP_o2R0\nhttps://www.youtube.com/watch?v=ey2L_ExKWuI\nhttps://www.youtube.com/watch?v=h2HkwOBNCsk\nhttps://www.youtube.com/watch?v=AewFTavD8ek\nhttps://www.youtube.com/watch?v=eREiru91Aqs\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/2od6l8WKRW4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/2od6l8WKRW4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/2od6l8WKRW4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/2od6l8WKRW4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/2od6l8WKRW4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 31,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "2od6l8WKRW4"
        }
      },
      "contentDetails": {
        "videoId": "2od6l8WKRW4",
        "videoPublishedAt": "2017-10-24T13:07:20Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "lY1Cr81PHUhtWa05Wg6P2GYe1bc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45NkVENTkxRDdCQUFBMDY4",
      "snippet": {
        "publishedAt": "2017-11-14T13:25:57Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Spin and Dizzy Cat Videos 2017",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/TnXEWoTtgfs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/TnXEWoTtgfs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/TnXEWoTtgfs/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 32,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "TnXEWoTtgfs"
        }
      },
      "contentDetails": {
        "videoId": "TnXEWoTtgfs",
        "videoPublishedAt": "2017-11-14T13:34:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qDBHdmyXsbWMWoITmJ7n3cxG88c",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DNkMwRUI2MkI4QkI4NDFG",
      "snippet": {
        "publishedAt": "2017-11-22T12:52:29Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cat training: Amazing! Cats using toilet compilation 2017",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSource videos:\nhttps://www.youtube.com/watch?v=ygc9aDMabI8\nhttps://www.youtube.com/watch?v=zQbHS4YJOMc\nhttps://www.youtube.com/watch?v=I1edDfzluXE\nhttps://www.youtube.com/watch?v=iI2eK5DbBYw\nhttps://www.youtube.com/watch?v=5dxjzAfExiU\nhttps://www.youtube.com/watch?v=x0Jl3wqZQVA\nhttps://www.youtube.com/watch?v=-nFR2mQ4bPE\nhttps://www.youtube.com/watch?v=j31RGNzaDGc\nhttps://www.youtube.com/watch?v=J0lZ0vUoc3E\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/VtfpbhYONjE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/VtfpbhYONjE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/VtfpbhYONjE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/VtfpbhYONjE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/VtfpbhYONjE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 33,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "VtfpbhYONjE"
        }
      },
      "contentDetails": {
        "videoId": "VtfpbhYONjE",
        "videoPublishedAt": "2017-11-22T12:57:40Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "QhMcTl9mFfqhKDyU_Pob6jZTgNE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DRUQwODMxQzUyRTlGRkY3",
      "snippet": {
        "publishedAt": "2018-03-19T01:57:01Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So many cute kittens videos compilation 2018",
        "description": "#Bravecto #anipetshop.com\n✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n--------------------------\n►►watch more: \n► Rescue 6 newborn puppies in the ground - Mother Dogs Protecting Their Babies\nhttps://www.youtube.com/watch?v=3TRBp2LNpFM&t=276s\n► Rescue 9 newborn puppies in the ground - Howl Of A Dog Rescue\nhttps://www.youtube.com/watch?v=4LdD2QlkP-I\n\n---------------------------\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/SB-qEYVdvXA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/SB-qEYVdvXA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/SB-qEYVdvXA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 34,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "SB-qEYVdvXA"
        }
      },
      "contentDetails": {
        "videoId": "SB-qEYVdvXA",
        "videoPublishedAt": "2018-03-19T02:00:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "EJEnZed6kmvdrJR3FRjreVUey_o",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41MzY4MzcwOUFFRUU3QzEx",
      "snippet": {
        "publishedAt": "2018-04-04T14:28:58Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Mother Cat and Cute Kittens - Best Family Cats Comilation 2018",
        "description": "#Bravecto #anipetshop.com\n✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n--------------------------\n►►watch more: \n► Rescue 6 newborn puppies in the ground - Mother Dogs Protecting Their Babies\nhttps://www.youtube.com/watch?v=3TRBp2LNpFM&t=276s\n► Rescue 9 newborn puppies in the ground - Howl Of A Dog Rescue\nhttps://www.youtube.com/watch?v=4LdD2QlkP-I\n-----------------------------\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nWe Are One by Vexento https://www.youtube.com/user/Vexento\nhttps://soundcloud.com/vexento\nMusic promoted by Audio Library https://youtu.be/Ssvu2yncgWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/rWNKAXAAFmY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/rWNKAXAAFmY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/rWNKAXAAFmY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/rWNKAXAAFmY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/rWNKAXAAFmY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 35,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "rWNKAXAAFmY"
        }
      },
      "contentDetails": {
        "videoId": "rWNKAXAAFmY",
        "videoPublishedAt": "2018-04-04T14:31:05Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "wLASCAq0FMiWHbhn_u6cdkruXKs",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yQUJFNUVCMzVDNjcxRTlF",
      "snippet": {
        "publishedAt": "2018-04-16T02:31:44Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cats and Owners eating ?",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/QE3yC0i6goA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/QE3yC0i6goA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/QE3yC0i6goA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 36,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "QE3yC0i6goA"
        }
      },
      "contentDetails": {
        "videoId": "QE3yC0i6goA",
        "videoPublishedAt": "2018-04-16T02:33:41Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "lbBnGQeKtn0V2ZhBtU7cqZixkhs",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41RTNBREYwMkI5QzU3RkY2",
      "snippet": {
        "publishedAt": "2018-04-25T01:51:11Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cats and Cute Kittens - Funny Cat compilation 2018",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nVexento - Masked Heroes \nhttps://www.youtube.com/watch?v=ZLhfr8mpzxU\nhttps://soundcloud.com/vexento/vexento-masked-heroes\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/YDyMFbLEYrY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/YDyMFbLEYrY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/YDyMFbLEYrY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/YDyMFbLEYrY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/YDyMFbLEYrY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 37,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "YDyMFbLEYrY"
        }
      },
      "contentDetails": {
        "videoId": "YDyMFbLEYrY",
        "videoPublishedAt": "2018-04-25T01:55:44Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "5O9eamR2ViyD6VvaWFpohQlnz84",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ENjI1QUI0MDI5NEQzODFE",
      "snippet": {
        "publishedAt": "2018-04-29T03:01:11Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So many cute kittens and funny cats compilation 2018",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nGood For You by THBD https://soundcloud.com/thbdsultan\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttp://creativecommons.org/licenses/b...\nMusic promoted by Audio Library https://youtu.be/-K_YSjqKgvQ\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/4gRM-uUydZg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/4gRM-uUydZg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/4gRM-uUydZg/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 38,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "4gRM-uUydZg"
        }
      },
      "contentDetails": {
        "videoId": "4gRM-uUydZg",
        "videoPublishedAt": "2018-04-29T03:04:25Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "zftcjEooRyI6hf8UVfdJBq3DjFA",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44QzVGQUU2QjE2NDgxM0M4",
      "snippet": {
        "publishedAt": "2018-05-02T12:28:54Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cats Doing Funny Things 2018 - Funny CAT compilation",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nLast Summer by Ikson:  http://www.soundcloud.com/ikson \nMusic promoted by Audio Library https://youtu.be/n2oTA5JSk80\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/o9YCBYbGKS0/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/o9YCBYbGKS0/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/o9YCBYbGKS0/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 39,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "o9YCBYbGKS0"
        }
      },
      "contentDetails": {
        "videoId": "o9YCBYbGKS0",
        "videoPublishedAt": "2018-05-02T12:33:24Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RNT1tw-W0Y5F5WaymTWZuENNVUc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4xMzgwMzBERjQ4NjEzNUE5",
      "snippet": {
        "publishedAt": "2018-05-04T14:51:14Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Mother cats and kitten Compilation 2018 ! So Adorable !! So Cute !!!",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nVexento - Lonely Dance\nhttps://www.youtube.com/watch?v=tvQvpIy9JnA\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/fmnRgbm82xk/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/fmnRgbm82xk/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/fmnRgbm82xk/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 40,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "fmnRgbm82xk"
        }
      },
      "contentDetails": {
        "videoId": "fmnRgbm82xk",
        "videoPublishedAt": "2018-05-04T14:55:36Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "tZ4fsF1fnWSaCSOAH2XR96DOMsQ",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42Qzk5MkEzQjVFQjYwRDA4",
      "snippet": {
        "publishedAt": "2018-05-11T08:59:34Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Kittens videos - Cute KITTEN Compilation 2018",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\nGet Outside! - Jason Farnham\nhttps://www.youtube.com/watch?v=x1T6QFpd0J4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/WBnqQaUCM1M/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/WBnqQaUCM1M/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/WBnqQaUCM1M/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 41,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "WBnqQaUCM1M"
        }
      },
      "contentDetails": {
        "videoId": "WBnqQaUCM1M",
        "videoPublishedAt": "2018-05-11T13:45:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "9xyrdwroAQG0fh4XHYuwFfsDJtw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41NTZEOThBNThFOUVGQkVB",
      "snippet": {
        "publishedAt": "2018-05-14T05:24:29Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Dogs and Cats Funny Compilation 2018♥",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nThe Land Of Happiness  by Nicolai Heidlas Music https://soundcloud.com/nicolai-heidlas\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/Ff19VzhuBVc\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/DW7clcPA1jc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/DW7clcPA1jc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/DW7clcPA1jc/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 42,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "DW7clcPA1jc"
        }
      },
      "contentDetails": {
        "videoId": "DW7clcPA1jc",
        "videoPublishedAt": "2018-05-14T13:45:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "iQP0Yb4OG6lJ9Aq9uS6uPMQ8XEY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43NERCMDIzQzFBMERCMEE3",
      "snippet": {
        "publishedAt": "2018-05-20T01:11:01Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Dogs Compilation 2018 - Funny Dog Videos - Cute Dogs Video",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/J7SOJ1jqYTs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/J7SOJ1jqYTs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/J7SOJ1jqYTs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/J7SOJ1jqYTs/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 43,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "J7SOJ1jqYTs"
        }
      },
      "contentDetails": {
        "videoId": "J7SOJ1jqYTs",
        "videoPublishedAt": "2018-05-20T01:19:48Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "vFZQ5mC5XZJxdAcWs9cTzjxMoY4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GNjAwN0Y0QTFGOTVDMEMy",
      "snippet": {
        "publishedAt": "2018-05-28T12:47:22Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats are always cutest and funniest - Funny cat compilation",
        "description": "Cats are simply the funniest and most hilarious pets, they make us laugh all the time! Just look how they play, sleep, fail, react to mirrors, make funny sounds....So ridiculous, funny and cute!\n\nHope you like our compilation, please share it and SUBSCRIBE! Watch also our other videos!\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/1o2wfZnVNxY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/1o2wfZnVNxY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/1o2wfZnVNxY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 44,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "1o2wfZnVNxY"
        }
      },
      "contentDetails": {
        "videoId": "1o2wfZnVNxY",
        "videoPublishedAt": "2018-05-28T13:45:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ajku9U7Lpf1hcypU4rCyUnviDwA",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CQkEwRDA0MDkwNUM2MDY1",
      "snippet": {
        "publishedAt": "2018-06-05T01:58:01Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Kittens videos - Funny And Cute KITTEN Compilation 2018",
        "description": "Cute Kittens videos - Funny And Cute KITTEN Compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nVexento - Trippy Love\nhttps://www.youtube.com/watch?v=qF9WM_aQF2w\nhttps://soundcloud.com/vexento/vexento-trippy-love\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-ic-fylAaRw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-ic-fylAaRw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-ic-fylAaRw/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 45,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-ic-fylAaRw"
        }
      },
      "contentDetails": {
        "videoId": "-ic-fylAaRw",
        "videoPublishedAt": "2018-06-05T02:04:20Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "bZxzX02bsFdpK4JATGC4fLcovIY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wNEU1MTI4NkZEMzVBN0JF",
      "snippet": {
        "publishedAt": "2018-06-08T01:55:24Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cat Videos Compilation 2018 - TRY NOT TO LAUGH or GRIN",
        "description": "Funny Cat Videos Compilation 2018 - TRY NOT TO LAUGH or GRIN\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\n\"Scheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/_B-zjkkVx3Q/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/_B-zjkkVx3Q/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/_B-zjkkVx3Q/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/_B-zjkkVx3Q/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/_B-zjkkVx3Q/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 46,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "_B-zjkkVx3Q"
        }
      },
      "contentDetails": {
        "videoId": "_B-zjkkVx3Q",
        "videoPublishedAt": "2018-06-08T02:01:05Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "PlFR5cKZyccsp69m_EYggXbLNyw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wMTYxQzVBRDI1NEVDQUZE",
      "snippet": {
        "publishedAt": "2018-06-10T10:19:37Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Mother cats protecting their cute kittens | Mom Cat Loves Kittens compilation 2018",
        "description": "Mother cats protecting their cute kittens | Mom Cat Loves Kittens compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nFluffing a Duck\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/yQjAF3frudY\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/UKQFgZllmIw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/UKQFgZllmIw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/UKQFgZllmIw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/UKQFgZllmIw/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 47,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "UKQFgZllmIw"
        }
      },
      "contentDetails": {
        "videoId": "UKQFgZllmIw",
        "videoPublishedAt": "2018-06-10T14:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RbZBf89QTW-tb-CFuD3QOnkq8fo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zMUEyMkQwOTk0NTg4MDgw",
      "snippet": {
        "publishedAt": "2018-06-14T01:09:56Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats just never fail to make you laugh and happiness - Funny cat compilation",
        "description": "Cats just never fail to make you laugh and happiness - Funny cat compilation\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nPACIFIC SUN by Nicolai Heidlas Music https://soundcloud.com/nicolai-heidlas\nMusic promoted by Audio Library: \nScheming Weasel (faster version) - Kevin MacLeod https://youtu.be/2CapGaKMsWU\nPACIFIC SUN - Nicolai Heidlas Music https://youtu.be/kbqmEJTr3nU\nLittle Idea - Bensound https://youtu.be/23yeyezjdJI\nCrimson Fly - Huma-Huma: https://youtu.be/qpxhgby-ONI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/i1h_uSv_w1I/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/i1h_uSv_w1I/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/i1h_uSv_w1I/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/i1h_uSv_w1I/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/i1h_uSv_w1I/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 48,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "i1h_uSv_w1I"
        }
      },
      "contentDetails": {
        "videoId": "i1h_uSv_w1I",
        "videoPublishedAt": "2018-06-14T01:13:05Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ekyzGlPPsBs2w1THWG8_bl_sXfA",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42QzdBMzlBQzQzRjQ0QkQy",
      "snippet": {
        "publishedAt": "2018-06-17T03:52:58Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Dog & Cats compilation 2018",
        "description": "Best Funny Dogs and Cats compilation 2018\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU ;  https://youtu.be/gnvwBNvVfuU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/RBfi1kGtPII/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/RBfi1kGtPII/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/RBfi1kGtPII/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/RBfi1kGtPII/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 49,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "RBfi1kGtPII"
        }
      },
      "contentDetails": {
        "videoId": "RBfi1kGtPII",
        "videoPublishedAt": "2018-06-17T03:55:13Z"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 123,
    "resultsPerPage": 50
  }
}

    http_version: null
  recorded_at: Mon, 11 May 2020 22:31:00 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE_API_KEY>&maxResults=50&pageToken=CDIQAA&part=snippet,contentDetails&playlistId=PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Mon, 11 May 2020 22:31:00 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "kind": "youtube#playlistItemListResponse",
  "etag": "m0HIjb93WC09Uh0kgUk930JKluQ",
  "nextPageToken": "CGQQAA",
  "prevPageToken": "CDIQAQ",
  "items": [
    {
      "kind": "youtube#playlistItem",
      "etag": "FINljskuf-voF1BU7nOVsRVUVfM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41OURENDc2NEM1MDI5Mjky",
      "snippet": {
        "publishedAt": "2018-06-19T11:35:36Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Best Vines Compilation of Cat and Kittens Videos Ever!",
        "description": "Best Vines Compilation of Cat and Kittens Videos Ever!\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMonkeys Spinning Monkeys\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/GQCoV1TarO4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/oueXNBlrIeE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/oueXNBlrIeE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/oueXNBlrIeE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/oueXNBlrIeE/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 50,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "oueXNBlrIeE"
        }
      },
      "contentDetails": {
        "videoId": "oueXNBlrIeE",
        "videoPublishedAt": "2018-06-19T14:00:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "dgjRUWcdOfewwhanrFKGayOf8rs",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wRjhFM0MxMTU1MEUzQ0VB",
      "snippet": {
        "publishedAt": "2018-06-24T09:30:54Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute and Funny Cats And Kittens Video 2018 - Funny Cat compilation",
        "description": "Cute and Funny Cats And Kittens Video 2018 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/EuvTORWs244/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/EuvTORWs244/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/EuvTORWs244/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/EuvTORWs244/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/EuvTORWs244/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 51,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "EuvTORWs244"
        }
      },
      "contentDetails": {
        "videoId": "EuvTORWs244",
        "videoPublishedAt": "2018-06-24T22:30:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "wX8trwJ4nh4GDmwQb_CXGEqST6c",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CNTZFOTNGQzZEODg1RUQx",
      "snippet": {
        "publishedAt": "2018-06-26T13:15:39Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats and Kittens compilation: 'Cute Is Not Enough'",
        "description": "Cats and Kittens compilation: 'Cute Is Not Enough'\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMonkeys Spinning Monkeys\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/GQCoV1TarO4\nhttps://www.youtube.com/channel/UCht8qITGkBvXKsR1Byln-wA\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/0YgkukBQQpQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/0YgkukBQQpQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/0YgkukBQQpQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/0YgkukBQQpQ/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 52,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "0YgkukBQQpQ"
        }
      },
      "contentDetails": {
        "videoId": "0YgkukBQQpQ",
        "videoPublishedAt": "2018-06-26T22:30:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qncDRUNat0KOUiooOgJnlDWZvBQ",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ERkUyQTM0MzEwQjZCMTY5",
      "snippet": {
        "publishedAt": "2018-07-01T09:30:25Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cat and Dogs compilation - Cute Dog and Cats videos 2018",
        "description": "Funny Cat and Dogs compilation - Cute Dog and Cats videos 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/h9kv8q26dbc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/h9kv8q26dbc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/h9kv8q26dbc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/h9kv8q26dbc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/h9kv8q26dbc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 53,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "h9kv8q26dbc"
        }
      },
      "contentDetails": {
        "videoId": "h9kv8q26dbc",
        "videoPublishedAt": "2018-07-01T09:41:30Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "3c_uT7lKiCGbv0-fFo74AuVBKGY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42MjYzMTMyQjA0QURCN0JF",
      "snippet": {
        "publishedAt": "2018-07-08T11:15:15Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "AWWWW SOOOOOOOOOOO CUTE KITTENS",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/23yeyezjdJI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/AgmnUl31_ng/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/AgmnUl31_ng/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/AgmnUl31_ng/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/AgmnUl31_ng/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/AgmnUl31_ng/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 54,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "AgmnUl31_ng"
        }
      },
      "contentDetails": {
        "videoId": "AgmnUl31_ng",
        "videoPublishedAt": "2018-07-08T11:17:31Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MXBYy9aesfDzeRAacYqsl85WrP4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC40MDNEMzA0QTBFRThFMzBE",
      "snippet": {
        "publishedAt": "2018-07-12T09:15:09Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cuteness kittens and puppy - Cute cat and dogs compilation",
        "description": "Cuteness kittens and puppy - Cute cat and dogs compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nUkulele by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/G7HoUVcL5-U\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/okbCgDHvOkg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/okbCgDHvOkg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/okbCgDHvOkg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/okbCgDHvOkg/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 55,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "okbCgDHvOkg"
        }
      },
      "contentDetails": {
        "videoId": "okbCgDHvOkg",
        "videoPublishedAt": "2018-07-12T10:30:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "6c0LpfGqOeOFxSw3PjOsjZRfad8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42RTNCOEMxREI3Q0VDMjU2",
      "snippet": {
        "publishedAt": "2018-07-16T11:08:15Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cats And Kittens & Kitty videos compilation 2018",
        "description": "Cute Cats And Kittens & Kitty videos compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic: Spring In My Step - Silent Partner https://youtu.be/siCmqvfw_1g\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/xosMyvzRoPM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/xosMyvzRoPM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/xosMyvzRoPM/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 56,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "xosMyvzRoPM"
        }
      },
      "contentDetails": {
        "videoId": "xosMyvzRoPM",
        "videoPublishedAt": "2018-07-16T11:16:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "JgjyAbGXCFNDfqlfWy5PbO9pQYs",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43QzNCNkZENzIyMDY2MjZB",
      "snippet": {
        "publishedAt": "2018-07-19T09:53:59Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cats and Little Kittens Meowing and Talking Compilation",
        "description": "►►watch more: \n► Rescue 6 newborn puppies in the ground - Mother Dogs Protecting Their Babies\nhttps://www.youtube.com/watch?v=3TRBp2LNpFM&t=276s\n► Rescue 9 newborn puppies in the ground - Howl Of A Dog Rescue\nhttps://www.youtube.com/watch?v=4LdD2QlkP-I\n---------------------------\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/xaUUNL3g-mU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/xaUUNL3g-mU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/xaUUNL3g-mU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/xaUUNL3g-mU/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 57,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "xaUUNL3g-mU"
        }
      },
      "contentDetails": {
        "videoId": "xaUUNL3g-mU",
        "videoPublishedAt": "2018-07-19T09:54:10Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "mPZjkS9FhNJsumOKt0aP5lStI1g",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EQkE3RTJCQTJEQkFBQTcz",
      "snippet": {
        "publishedAt": "2018-07-23T10:30:18Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute is Not Enough - Funny Cats and Dogs Compilation",
        "description": "Cute is Not Enough - Funny Cats and Dogs Compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nScheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vl-gmkjIc1k/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vl-gmkjIc1k/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vl-gmkjIc1k/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/vl-gmkjIc1k/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/vl-gmkjIc1k/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 58,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vl-gmkjIc1k"
        }
      },
      "contentDetails": {
        "videoId": "vl-gmkjIc1k",
        "videoPublishedAt": "2018-07-23T10:34:42Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Sn85bJq_uKHEe5F_NAJM3Fv0MKY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yQzk4QTA5QjkzMTFFOEI1",
      "snippet": {
        "publishedAt": "2018-07-29T03:44:55Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cutest Cat Ever - Happy Cats Compilation 2018",
        "description": "Cutest Cat Ever - Happy Cats Compilation 2018\n\n#Cute kittens# cute cats# cats and kitten# cats# cat#\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\nMusic: Get Outside! - Jason Farnham: https://youtu.be/x1T6QFpd0J4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/U8XtPakueig/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/U8XtPakueig/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/U8XtPakueig/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/U8XtPakueig/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/U8XtPakueig/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 59,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "U8XtPakueig"
        }
      },
      "contentDetails": {
        "videoId": "U8XtPakueig",
        "videoPublishedAt": "2018-07-29T03:51:34Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "OSDpyoLP0zEim1hEHao3rATaRSE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45NDlDQUFFOThDMTAxQjUw",
      "snippet": {
        "publishedAt": "2018-08-02T14:54:56Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cats and Cute Kittens overload Compilation 2018",
        "description": "Cats and Cute Kittens overload Compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/23yeyezjdJI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nIf you see a clip that you own that you did not submit or give consent for use, \nwe have likely received false permissions and would be happy to resolve this for you! \nPlease drop us a line at mrbeanwow@gmail.com\n\n#cat #cats #kittens #catcompilation #funny #cute #fail #laughing #pets #animals",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/sYa-QqB5hHQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/sYa-QqB5hHQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/sYa-QqB5hHQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 60,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "sYa-QqB5hHQ"
        }
      },
      "contentDetails": {
        "videoId": "sYa-QqB5hHQ",
        "videoPublishedAt": "2018-08-02T14:59:10Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "dpHJUPLGKoiwTUvhjXIOiUjDlsM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4xN0Y2QjVBOEI2MzQ5OUM5",
      "snippet": {
        "publishedAt": "2018-08-09T05:51:20Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Kittens Will Melt Your Heart - Kittens That Will Make You Fall In Love",
        "description": "Cute Kittens Will Melt Your Heart\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nFluffing a Duck\" Kevin MacLeod (incompetech.com)\nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/yQjAF3frudY \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/gUIJ-UkQsXI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/gUIJ-UkQsXI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/gUIJ-UkQsXI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/gUIJ-UkQsXI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/gUIJ-UkQsXI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 61,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "gUIJ-UkQsXI"
        }
      },
      "contentDetails": {
        "videoId": "gUIJ-UkQsXI",
        "videoPublishedAt": "2018-08-09T05:57:37Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "KrkvWuEkPEGSzjUa4OLQK6NSLSM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5FQUY2Qzk4RUFDN0ZFRkZF",
      "snippet": {
        "publishedAt": "2018-08-18T09:22:00Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "A Cute Cats and Kitten Funny compilation 2018",
        "description": "A Cute Cats and Kitten Funny compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#funny cat #funny cats #kittens #cats #cats",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/bSVIUIi66yY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/bSVIUIi66yY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/bSVIUIi66yY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 62,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "bSVIUIi66yY"
        }
      },
      "contentDetails": {
        "videoId": "bSVIUIi66yY",
        "videoPublishedAt": "2018-08-18T09:26:54Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "TDXQ0NOivaQVwJFzM2CagqUPkYg",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CMEVBRUJERkUyNTBENTkz",
      "snippet": {
        "publishedAt": "2018-08-23T12:45:21Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cat and Cute Kitten Videos - Cat Vines Compilation",
        "description": "Funny Cat and Cute Kitten Videos - Cat Vines Compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/mTetaC3gI-A/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/mTetaC3gI-A/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/mTetaC3gI-A/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 63,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "mTetaC3gI-A"
        }
      },
      "contentDetails": {
        "videoId": "mTetaC3gI-A",
        "videoPublishedAt": "2018-08-23T12:51:38Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "raZVxD5J6K40pf2vv0SbfR_mJqo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4xNjIyNEE0MDEyRDlCMjBE",
      "snippet": {
        "publishedAt": "2018-08-27T03:24:02Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cutest Cats! Cute is Not Enough - FUNNY CATS! 2018",
        "description": "Cutest Cats! Cute is Not Enough - FUNNY CATS! 2018\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nScheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #cats #funny cats #funny cat compilation#",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/TDt5ke65B10/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/TDt5ke65B10/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/TDt5ke65B10/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 64,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "TDt5ke65B10"
        }
      },
      "contentDetails": {
        "videoId": "TDt5ke65B10",
        "videoPublishedAt": "2018-08-27T13:45:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "47NwsAO9ZsH06bGLNNbps4bx2Os",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44QTY2MEEzNzBFQUJCMUQ2",
      "snippet": {
        "publishedAt": "2018-09-05T02:21:01Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "funny and cute cats compilation 2018",
        "description": "funny and cute cats compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nScheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/qkyqeY617-g/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/qkyqeY617-g/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/qkyqeY617-g/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/qkyqeY617-g/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/qkyqeY617-g/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 65,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "qkyqeY617-g"
        }
      },
      "contentDetails": {
        "videoId": "qkyqeY617-g",
        "videoPublishedAt": "2018-09-05T02:28:24Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "xgGFjn3ejSCDNPDt5NG5o2qGT88",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zQTkzRjgxRTY0OEU0MkM3",
      "snippet": {
        "publishedAt": "2018-09-18T04:51:33Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kitten Doing Funny Things 2018♥ || Funny Animals",
        "description": "♥Cute Cats and Kitten Doing Funny Things 2018♥ || Funny Animals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nHappy Life by FREDJI https://soundcloud.com/fredjimusic\nhttps://www.facebook.com/fredjimusic/\nMusic promoted by Audio Library https://youtu.be/u4PI5p5bI9k\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cats #funny #funnycatvideos",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7ehIWZBeICo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7ehIWZBeICo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7ehIWZBeICo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 66,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7ehIWZBeICo"
        }
      },
      "contentDetails": {
        "videoId": "7ehIWZBeICo",
        "videoPublishedAt": "2018-09-18T04:56:24Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MBaznOATvcCXyqAuNUaiAAA5Txk",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4xNTZBNUQxMDZBQzFGMjkw",
      "snippet": {
        "publishedAt": "2018-09-23T02:57:29Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cats #cat #funny #funnycatvideos",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/lQeEOV515vQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/lQeEOV515vQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/lQeEOV515vQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/lQeEOV515vQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/lQeEOV515vQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 67,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "lQeEOV515vQ"
        }
      },
      "contentDetails": {
        "videoId": "lQeEOV515vQ",
        "videoPublishedAt": "2018-09-23T03:00:19Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "sJKyBPAmXcq0_T3k6ait9SQoRQI",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wMDFGNzBEOTU4Q0Y1Q0RG",
      "snippet": {
        "publishedAt": "2018-09-27T03:56:57Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Dogs Doing Funny Things 2018♥ - Funny Dog and Cat Videos",
        "description": "♥Cute Cats and Dogs Doing Funny Things 2018♥ - Funny Dog and Cat Videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nHappy Life by FREDJI https://soundcloud.com/fredjimusic\nhttps://www.facebook.com/fredjimusic/\nMusic promoted by Audio Library https://youtu.be/u4PI5p5bI9k\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #dog #funnycat #funnydog #FunnyAnimals",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/mXZOFOYicEE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/mXZOFOYicEE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/mXZOFOYicEE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/mXZOFOYicEE/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 68,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "mXZOFOYicEE"
        }
      },
      "contentDetails": {
        "videoId": "mXZOFOYicEE",
        "videoPublishedAt": "2018-09-27T04:00:39Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "pM4ap9b61BRiTC6_Ditef44XQ_s",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44QTA1QTQyRTc3M0VGQzYx",
      "snippet": {
        "publishedAt": "2018-09-30T03:20:27Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Dogs Doing Funny Things 2018♥  # 1 - Funny Dog and Cat Videos",
        "description": "♥Cute Cats and Dogs Doing Funny Things 2018♥  # 1 - Funny Dog and Cat Videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nThe Land Of Happiness  by Nicolai Heidlas Music https://soundcloud.com/nicolai-heidlas\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/Ff19VzhuBVc\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #dog #funnycat #funnydog #FunnyAnimals",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/ug_Zknfjjf4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/ug_Zknfjjf4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/ug_Zknfjjf4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/ug_Zknfjjf4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/ug_Zknfjjf4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 69,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "ug_Zknfjjf4"
        }
      },
      "contentDetails": {
        "videoId": "ug_Zknfjjf4",
        "videoPublishedAt": "2018-09-30T03:23:42Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qc9D8ZEQ1UA1q7YCIKHb-SGhy_Y",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44MkM2RjVEQkQ5N0I2MjVE",
      "snippet": {
        "publishedAt": "2018-10-05T09:56:56Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Dogs Doing Funny Things 2018♥ # 2 - Funny Dog and Cat Videos",
        "description": "♥Cute Cats and Dogs Doing Funny Things 2018♥ # 2 - Funny Dog and Cat Videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/274MCdF_YoI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/274MCdF_YoI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/274MCdF_YoI/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 70,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "274MCdF_YoI"
        }
      },
      "contentDetails": {
        "videoId": "274MCdF_YoI",
        "videoPublishedAt": "2018-10-05T09:59:08Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "gIMkAbmWJdMUckcac6v7TijU570",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CMUM0NzY5NzdEQzlGRjAx",
      "snippet": {
        "publishedAt": "2018-10-11T05:25:28Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Mother Dogs and Cats Protecting Their Babies Compilation 2018",
        "description": "Mother Dogs and Cats Protecting Their Babies Compilation 2018\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nOriginal links: \n1.https://www.youtube.com/watch?v=B8SgEUKscYM\n2.https://www.youtube.com/watch?v=4C4se7NJNYo\n3.https://www.youtube.com/watch?v=c0djUzPLFFY\n4.https://www.youtube.com/watch?v=4fVdDk-RjV0\n5.https://www.youtube.com/watch?v=T14jCmQ22og\n6.https://www.youtube.com/watch?v=7lqu4EmqrFY\n7.https://www.youtube.com/watch?v=ydDBqGlIJcg\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/lLMUDbn8YMo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/lLMUDbn8YMo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/lLMUDbn8YMo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/lLMUDbn8YMo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/lLMUDbn8YMo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 71,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "lLMUDbn8YMo"
        }
      },
      "contentDetails": {
        "videoId": "lLMUDbn8YMo",
        "videoPublishedAt": "2018-10-11T05:28:56Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "dbkjPtgovftgdaD7JqgHn14xI3U",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GMDBDNkJGMzYzREUyMTYw",
      "snippet": {
        "publishedAt": "2018-10-14T03:03:41Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #1 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #1 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\n\"Scheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8priS5bol58/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8priS5bol58/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8priS5bol58/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 72,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8priS5bol58"
        }
      },
      "contentDetails": {
        "videoId": "8priS5bol58",
        "videoPublishedAt": "2018-10-14T03:06:56Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "XjLNSQqydk06Wf5lfTVxHgRS0TY",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DQjg2RDQyMEVGQkZFOEVF",
      "snippet": {
        "publishedAt": "2018-10-27T05:14:50Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #2 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #2 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\n\"Scheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/CrdZvybGydM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/CrdZvybGydM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/CrdZvybGydM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/CrdZvybGydM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/CrdZvybGydM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 73,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "CrdZvybGydM"
        }
      },
      "contentDetails": {
        "videoId": "CrdZvybGydM",
        "videoPublishedAt": "2018-10-27T12:00:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "SKOLx4iCSaVaxT-JnIQWQdSVvnU",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yM0EyQ0U1M0I2RkIwNTQ0",
      "snippet": {
        "publishedAt": "2018-10-30T04:20:18Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #5 - Funny Cat and Dog compilation",
        "description": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #5 - Funny Cat and Dog compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/MS1Xc55jK5A/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/MS1Xc55jK5A/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/MS1Xc55jK5A/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/MS1Xc55jK5A/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/MS1Xc55jK5A/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 74,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "MS1Xc55jK5A"
        }
      },
      "contentDetails": {
        "videoId": "MS1Xc55jK5A",
        "videoPublishedAt": "2018-10-30T04:23:24Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "xFTVs2jRgSDZ7uDqMh35oV-wXZU",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41RDUzRjJFQ0Y0MUI3NzU1",
      "snippet": {
        "publishedAt": "2018-11-05T05:53:07Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #3 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #3 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nHappy Life by FREDJI https://soundcloud.com/fredjimusic\nhttps://www.facebook.com/fredjimusic/\nMusic promoted by Audio Library https://youtu.be/u4PI5p5bI9k\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/VPFvIauSusY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/VPFvIauSusY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/VPFvIauSusY/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/VPFvIauSusY/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/VPFvIauSusY/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 75,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "VPFvIauSusY"
        }
      },
      "contentDetails": {
        "videoId": "VPFvIauSusY",
        "videoPublishedAt": "2018-11-05T12:00:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "dE-mFPd79N1SjfRa7k-AOlYaaBw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5FRjdGNDMzN0I2RTI3MDlG",
      "snippet": {
        "publishedAt": "2018-11-13T10:44:56Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #7 - Funny Dog compilation",
        "description": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #7 - Funny Dog compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/xRGQdTuwKDo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/xRGQdTuwKDo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/xRGQdTuwKDo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 76,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "xRGQdTuwKDo"
        }
      },
      "contentDetails": {
        "videoId": "xRGQdTuwKDo",
        "videoPublishedAt": "2018-11-13T10:46:28Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "q0yl_zqCYn-zCgIGU2sjrrSbD70",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41ODIyMTgwQzA4NjJCQkZC",
      "snippet": {
        "publishedAt": "2018-11-15T01:58:23Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #4 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #4 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\n\"Scheming Weasel (faster version)\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/2CapGaKMsWU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/NCZ0eg1zEvw/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/NCZ0eg1zEvw/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/NCZ0eg1zEvw/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/NCZ0eg1zEvw/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/NCZ0eg1zEvw/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 77,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "NCZ0eg1zEvw"
        }
      },
      "contentDetails": {
        "videoId": "NCZ0eg1zEvw",
        "videoPublishedAt": "2018-11-15T02:02:38Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MLwuy1FbAGLHA9OlBsYOEqqm5ms",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EMUJFNzRCNDRFQjE5RjM4",
      "snippet": {
        "publishedAt": "2018-11-20T08:25:53Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #9 - FunnyAnimals",
        "description": "♥Cute Dogs and Cats Doing Funny Things 2018♥ #9 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nSpring In My Step - Silent Partner https://youtu.be/siCmqvfw_1g\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/wEXUG0OyKXY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/wEXUG0OyKXY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/wEXUG0OyKXY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 78,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "wEXUG0OyKXY"
        }
      },
      "contentDetails": {
        "videoId": "wEXUG0OyKXY",
        "videoPublishedAt": "2018-11-20T11:00:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "y-HxYmlAjKCMQWnRwvjueTTDZL8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44QjNCNkRENjNFQTBEMUND",
      "snippet": {
        "publishedAt": "2018-11-23T07:19:30Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So many cute kittens videos compilation 2018 #1 - FunnyAnimals",
        "description": "So many cute kittens videos compilation 2018 #1 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/ap4W4KqmAYc\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/PKB7qfAOKns/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/PKB7qfAOKns/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/PKB7qfAOKns/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 79,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "PKB7qfAOKns"
        }
      },
      "contentDetails": {
        "videoId": "PKB7qfAOKns",
        "videoPublishedAt": "2018-11-24T00:00:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "kHkkNbMq0od4x_P3QJd9wMKmaeo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GNzk2RTlDQTNCQzJCQzJG",
      "snippet": {
        "publishedAt": "2018-11-26T02:54:27Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Is Not Enough| Funny Cats and Kitten Videos Compilation (2018) Gatitos Bebes Video Recopilacion",
        "description": "Cute Is Not Enough| Funny Cats and Kitten Videos Compilation (2018) Gatitos Bebes Video Recopilacion\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/gnvwBNvVfuU\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/58GBIUozfYg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/58GBIUozfYg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/58GBIUozfYg/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 80,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "58GBIUozfYg"
        }
      },
      "contentDetails": {
        "videoId": "58GBIUozfYg",
        "videoPublishedAt": "2018-11-26T02:58:49Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "0WR6dCMZD9ADOgiw-U1-wxwQcA8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43ODA2MDVCQzY5QzZDMjUw",
      "snippet": {
        "publishedAt": "2018-11-27T12:57:26Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute cat and dog funny videos 2018 - FunnyAnimals",
        "description": "Cute cat and dog funny videos 2018 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/yskF5NBgNCA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/yskF5NBgNCA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/yskF5NBgNCA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 81,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "yskF5NBgNCA"
        }
      },
      "contentDetails": {
        "videoId": "yskF5NBgNCA",
        "videoPublishedAt": "2018-11-27T12:59:39Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "1PNBBrorhBfKnLSdpvuPzFCUlhg",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC40OTQ5QjlEMDgzN0FBNUIw",
      "snippet": {
        "publishedAt": "2018-11-29T07:44:04Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Animal Videos Compilation 2018 - funny animal videos",
        "description": "Funny and Cute Animal Videos Compilation 2018 - funny animal videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/mzk6uvE8z6Q/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/mzk6uvE8z6Q/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/mzk6uvE8z6Q/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 82,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "mzk6uvE8z6Q"
        }
      },
      "contentDetails": {
        "videoId": "mzk6uvE8z6Q",
        "videoPublishedAt": "2018-11-29T11:00:06Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "LB3tGS67yOlBc2kRuCL1jQ6_3Yc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CQzUwREI3MzkxQjdBM0E0",
      "snippet": {
        "publishedAt": "2018-12-01T07:12:34Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #6 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #6 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat  #funny  #animal  #kitten  #compilation  #cats  #fail  #laugh  #pets  #animals  #pet",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/jmzX1quN-qs/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/jmzX1quN-qs/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/jmzX1quN-qs/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/jmzX1quN-qs/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 83,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "jmzX1quN-qs"
        }
      },
      "contentDetails": {
        "videoId": "jmzX1quN-qs",
        "videoPublishedAt": "2018-12-01T07:18:14Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "VulbPu8o0iSVttX8dXupgzzF46I",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4yOTZGRTNEQ0ZGNUM5RDgw",
      "snippet": {
        "publishedAt": "2018-12-05T01:54:28Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #7 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #7 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nSong: Ehrling - You And Me (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link: https://youtu.be/8HJSl7AiJNg\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #cats #kitten #catcompilation #funny #hilarious #fail #laugh #pets #animals",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/k7nSbLPEaZQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/k7nSbLPEaZQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/k7nSbLPEaZQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 84,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "k7nSbLPEaZQ"
        }
      },
      "contentDetails": {
        "videoId": "k7nSbLPEaZQ",
        "videoPublishedAt": "2018-12-05T01:59:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "rFCrwIocy89mt3hWuunviu3wjj0",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zNDIxRUJGQThFRTg1QzAy",
      "snippet": {
        "publishedAt": "2018-12-06T03:56:26Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #8 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #8 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nSong: Ehrling - You And Me (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link: https://youtu.be/8HJSl7AiJNg\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/9R5a7UwFa0Q/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/9R5a7UwFa0Q/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/9R5a7UwFa0Q/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 85,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "9R5a7UwFa0Q"
        }
      },
      "contentDetails": {
        "videoId": "9R5a7UwFa0Q",
        "videoPublishedAt": "2018-12-06T04:01:35Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "paomTor-xCA9zdnDFGrY2zwaUAM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wN0FBRUVFNEVBMTZBQ0Mx",
      "snippet": {
        "publishedAt": "2018-12-09T02:57:26Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #9 - Funny Cat compilation",
        "description": "♥Cute Cats and Kittens Doing Funny Things 2018♥ #9 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSong: MBB - Beach (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link:  https://youtu.be/bfjxyOtpvlA\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #cats #funny #compilation #laugh #challenge",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/aIjVu-xYQ_s/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/aIjVu-xYQ_s/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/aIjVu-xYQ_s/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 86,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "aIjVu-xYQ_s"
        }
      },
      "contentDetails": {
        "videoId": "aIjVu-xYQ_s",
        "videoPublishedAt": "2018-12-09T03:02:27Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "YDuKB1DJjT-4Th4F27gJtsMpgXo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EODgyNjY4MzA3QzY5RTkx",
      "snippet": {
        "publishedAt": "2018-12-12T05:05:51Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "♥Cute cat and dog funny compilation 2018♥ #1 - FunnyAnimals",
        "description": "♥Cute cat and dog funny compilation 2018♥ #1 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSong: Ehrling - Dance With Me (Vlog No Copyright Music)\nMusic promoted by Vlog No Copyright Music.\nVideo Link: https://youtu.be/Zs5eA-rvCdE\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/RwFerx_V9KU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/RwFerx_V9KU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/RwFerx_V9KU/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 87,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "RwFerx_V9KU"
        }
      },
      "contentDetails": {
        "videoId": "RwFerx_V9KU",
        "videoPublishedAt": "2018-12-12T05:13:07Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "hEuhDPjN2DyCTDuiwhTeflT9ugE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44NjIxNjc5OUQwQkJBODQ5",
      "snippet": {
        "publishedAt": "2018-12-15T09:04:43Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cat and owners are the best friend compilation - Cats not angry at anything",
        "description": "Cute Cat and owners are the best friend compilation - Cats not angry at anything\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSong: Fredji - Happy Life (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link: https://youtu.be/KzQiRABVARk\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/7mY-zAoxfrY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/7mY-zAoxfrY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/7mY-zAoxfrY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 88,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "7mY-zAoxfrY"
        }
      },
      "contentDetails": {
        "videoId": "7mY-zAoxfrY",
        "videoPublishedAt": "2018-12-15T09:07:50Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "gTaroPaVNM4T7bVWRMNs3x3tJXE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wRkVBNUY4OTkzN0JCNTA2",
      "snippet": {
        "publishedAt": "2018-12-17T05:50:27Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Cat and Dog compilation 2018 #4 - FunnyAnimals",
        "description": "Funny and Cute Cat and Dog compilation 2018 #4 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/ap4W4KqmAYc\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#funnydogs #animals #funnydog #cutecats #funnycat #funnypetvideos",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/zDlsPp8f3MU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/zDlsPp8f3MU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/zDlsPp8f3MU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/zDlsPp8f3MU/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 89,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "zDlsPp8f3MU"
        }
      },
      "contentDetails": {
        "videoId": "zDlsPp8f3MU",
        "videoPublishedAt": "2018-12-17T05:56:35Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "MDsfFj4vbclSuoSBPu6eTuv5FN0",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43NjE5NDdDRTdENjQ3RTkw",
      "snippet": {
        "publishedAt": "2018-12-18T08:17:48Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Dog and Cat Knows Exactly How To Comfort His Owners",
        "description": "Dog and Cat Knows Exactly How To Comfort His Owners\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/_Me2Pp0xpDI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/_Me2Pp0xpDI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/_Me2Pp0xpDI/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 90,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "_Me2Pp0xpDI"
        }
      },
      "contentDetails": {
        "videoId": "_Me2Pp0xpDI",
        "videoPublishedAt": "2018-12-18T08:22:07Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "CSTDVPK1eVNgw9DzK5NFQpg6TNk",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ENEEyOTIwNkY4NzFGMkQ2",
      "snippet": {
        "publishedAt": "2018-12-19T02:04:45Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #10",
        "description": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #10\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSong: MBB - Beach (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link:  https://youtu.be/bfjxyOtpvlA\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/arGykQMavQM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/arGykQMavQM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/arGykQMavQM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/arGykQMavQM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/arGykQMavQM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 91,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "arGykQMavQM"
        }
      },
      "contentDetails": {
        "videoId": "arGykQMavQM",
        "videoPublishedAt": "2018-12-19T02:06:53Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "ryM50Uorei7lm_3dgskQy0HModk",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42NEZDNTU0RTRENDUzRjMz",
      "snippet": {
        "publishedAt": "2018-12-20T07:02:36Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #11",
        "description": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #11\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/ap4W4KqmAYc\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/aUWLT02Daoo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/aUWLT02Daoo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/aUWLT02Daoo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/aUWLT02Daoo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/aUWLT02Daoo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 92,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "aUWLT02Daoo"
        }
      },
      "contentDetails": {
        "videoId": "aUWLT02Daoo",
        "videoPublishedAt": "2018-12-20T07:07:53Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "99VJjCZKyTeE8-W3exEbQdVu5Rc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5BRDg1NUY1OTY2QzgzOEM0",
      "snippet": {
        "publishedAt": "2018-12-21T07:23:11Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "❤Cute baby and cat❤ Cats playing fun together with a baby❤ Cat not getting angry at anything",
        "description": "❤Cute baby and cat❤ Cats playing fun together with a baby❤ Cat not getting angry at anything\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nMusic: Get Outside! - Jason Farnham: https://youtu.be/x1T6QFpd0J4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#baby #cat #cats #cute cats #cute baby #funny cat",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cQQmmIH1HIo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cQQmmIH1HIo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cQQmmIH1HIo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/cQQmmIH1HIo/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 93,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "cQQmmIH1HIo"
        }
      },
      "contentDetails": {
        "videoId": "cQQmmIH1HIo",
        "videoPublishedAt": "2018-12-21T07:28:17Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "lYPnZ3u-CVNKeRHKm65tuQimF6c",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ERkRDQjY0N0Y0Q0VFOTdC",
      "snippet": {
        "publishedAt": "2018-12-22T09:29:31Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #12",
        "description": "Cute is Not Enough - Cute Cats and Kittens Doing Funny Things 2018 #12\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nMusic: Whistling Down the Road - Silent Partner https://youtu.be/hExrCWx2Wr4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/wXtCAJouTkc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/wXtCAJouTkc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/wXtCAJouTkc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/wXtCAJouTkc/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 94,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "wXtCAJouTkc"
        }
      },
      "contentDetails": {
        "videoId": "wXtCAJouTkc",
        "videoPublishedAt": "2018-12-22T09:33:11Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "FuEcskTsCwclMVopNH77RjyNn4I",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wMDkwRkI3NzExODA2MTFG",
      "snippet": {
        "publishedAt": "2018-12-24T01:21:10Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Cat and Dog compilation 2018 #5 - FunnyAnimals",
        "description": "Funny and Cute Cat and Dog compilation 2018 #5 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/23yeyezjdJI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #dog #cats #dogs #funnycat #funnydog #funny #cute #pets #funnyanimals",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/gUGdD5zFESo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/gUGdD5zFESo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/gUGdD5zFESo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/gUGdD5zFESo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/gUGdD5zFESo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 95,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "gUGdD5zFESo"
        }
      },
      "contentDetails": {
        "videoId": "gUGdD5zFESo",
        "videoPublishedAt": "2018-12-24T01:27:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "zetCFj07WJyrFtz3T_BLx7C6jhc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41NUMwNTVERDNBRDc4REM0",
      "snippet": {
        "publishedAt": "2019-01-01T03:43:24Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny action of cats compilation 2019 - Funny Cat compilation",
        "description": "Funny action of cats compilation 2019 - Funny Cat compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/MiRAp-XSfTo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/MiRAp-XSfTo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/MiRAp-XSfTo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 96,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "MiRAp-XSfTo"
        }
      },
      "contentDetails": {
        "videoId": "MiRAp-XSfTo",
        "videoPublishedAt": "2019-01-01T03:45:39Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Oq3O3qQb150GX0PYVADj1TrLgO0",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5BRUVCN0E0MzEwQzAwNjMy",
      "snippet": {
        "publishedAt": "2019-01-02T03:28:01Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute is Not Enough - Cute Dogs and Cats Doing Funny Things 2019 #14 - FunnyAnimals",
        "description": "Cute is Not Enough - Cute Dogs and Cats Doing Funny Things 2019 #14 - FunnyAnimals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\n\"Carefree\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/owrhKIN3Y90\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/eMc_qixpcFo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/eMc_qixpcFo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/eMc_qixpcFo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 97,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "eMc_qixpcFo"
        }
      },
      "contentDetails": {
        "videoId": "eMc_qixpcFo",
        "videoPublishedAt": "2019-01-02T03:32:54Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "90_trHLGuJ3UYNP8sG80qu-re-E",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EODkyNDMzRkJBNkQ2NkMz",
      "snippet": {
        "publishedAt": "2019-01-03T10:35:42Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Dogs and cats & owners are the best friends #2 - Funny Cat and Dog compilation",
        "description": "Dogs and cats & owners are the best friends #2 - Funny Cat and Dog compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8zCx5yH-MqM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8zCx5yH-MqM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8zCx5yH-MqM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8zCx5yH-MqM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8zCx5yH-MqM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 98,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8zCx5yH-MqM"
        }
      },
      "contentDetails": {
        "videoId": "8zCx5yH-MqM",
        "videoPublishedAt": "2019-01-03T12:00:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "qQAgd0LibjnURSZqw49rZjcQbQE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41MzJFNEYxODEyNzA0QUUx",
      "snippet": {
        "publishedAt": "2019-01-06T01:54:45Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So many cute kittens videos compilation 2019 #2",
        "description": "So many cute kittens videos compilation 2019 #2\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/ap4W4KqmAYc\nMusic promoted by Audio Library https://youtu.be/owrhKIN3Y90\nMusic promoted by Audio Library https://youtu.be/23yeyezjdJI\nMusic: Get Outside! - Jason Farnham:\nhttps://youtu.be/x1T6QFpd0J4\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com\n\n#cat #kitten #cats #kittens #funnycat #pet #animals #cute #funny",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/5czSr2UD7-Q/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/5czSr2UD7-Q/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/5czSr2UD7-Q/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 99,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "5czSr2UD7-Q"
        }
      },
      "contentDetails": {
        "videoId": "5czSr2UD7-Q",
        "videoPublishedAt": "2019-01-08T01:45:00Z"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 123,
    "resultsPerPage": 50
  }
}

    http_version: null
  recorded_at: Mon, 11 May 2020 22:31:00 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE_API_KEY>&maxResults=50&pageToken=CGQQAA&part=snippet,contentDetails&playlistId=PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Mon, 11 May 2020 22:31:00 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "kind": "youtube#playlistItemListResponse",
  "etag": "0s_-o_7828whTd9fDWPhq91icdA",
  "prevPageToken": "CGQQAQ",
  "items": [
    {
      "kind": "youtube#playlistItem",
      "etag": "YhOgWkp-fGt4FWkiCsQTfqQEDRM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ENjg3MEUyQ0IzODMzQThB",
      "snippet": {
        "publishedAt": "2019-01-12T04:18:52Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Dogs And Cats Videos 2019 #15 - FunnyAnimals",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/Jlpus0QwZs8/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/Jlpus0QwZs8/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/Jlpus0QwZs8/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/Jlpus0QwZs8/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/Jlpus0QwZs8/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 100,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "Jlpus0QwZs8"
        }
      },
      "contentDetails": {
        "videoId": "Jlpus0QwZs8",
        "videoPublishedAt": "2019-01-12T04:24:26Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "__zUtyDw5k76Pok6KBS-7gtNtS8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC45MEI3NjgzMTVFQkZGODYx",
      "snippet": {
        "publishedAt": "2019-01-13T14:22:33Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny And Cute Cats and Kitten Videos 2019 #14 - Funny Animals",
        "description": "►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nBackground Music:\nMusic by BENSOUND https://www.bensound.com/royalty-free-music\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/23yeyezjdJI\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vdXDjCyv10M/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vdXDjCyv10M/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vdXDjCyv10M/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 101,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vdXDjCyv10M"
        }
      },
      "contentDetails": {
        "videoId": "vdXDjCyv10M",
        "videoPublishedAt": "2019-01-13T14:28:04Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "rheDcCpjgGu4pyBoI8hO_WYfRts",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4zNEMzQ0FDREY1MkE1RkQ1",
      "snippet": {
        "publishedAt": "2019-01-14T12:11:54Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and So Cute Dogs And Cats compilation 2019 #16 - FunnyAnimals",
        "description": "►► Donate: Paypal: mrbeanwow@gmail.com\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/nZZBTra2fOI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/nZZBTra2fOI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/nZZBTra2fOI/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/nZZBTra2fOI/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/nZZBTra2fOI/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 102,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "nZZBTra2fOI"
        }
      },
      "contentDetails": {
        "videoId": "nZZBTra2fOI",
        "videoPublishedAt": "2019-01-14T12:15:56Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8f0eY6TtKz1wpAUgIDVUcqr7xaw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5BQzRBQzNEOTgzNTU2QkZB",
      "snippet": {
        "publishedAt": "2019-01-15T12:08:23Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Dogs And Cats compilation 2019 #17 - Funny Dogs Fails Compilation",
        "description": "Funny and Cute Dogs And Cats compilation 2019 #17 - Funny Dogs Fails Compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\"Monkeys Spinning Monkeys\" Kevin MacLeod (incompetech.com) \nLicensed under Creative Commons: By Attribution 3.0\nhttps://creativecommons.org/licenses/by/3.0/\nMusic promoted by Audio Library https://youtu.be/GQCoV1TarO4\nMusic promoted by Audio Library https://youtu.be/owrhKIN3Y90\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/YLWstxJInPo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/YLWstxJInPo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/YLWstxJInPo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/YLWstxJInPo/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 103,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "YLWstxJInPo"
        }
      },
      "contentDetails": {
        "videoId": "YLWstxJInPo",
        "videoPublishedAt": "2019-01-15T12:16:02Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8Eu7E3IYlPxqZvtRhZOGa0Mf_7E",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EN0U0NTk3NzIwMjUxN0M3",
      "snippet": {
        "publishedAt": "2019-01-25T01:44:49Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny And Cute Cats and Kitten Videos 2019 #15 - Funny Animals",
        "description": "Funny And Cute Cats and Kitten Videos 2019 #15 - Funny Animals\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSong: Fredji - Happy Life (Vlog No Copyright Music)\nMusic provided by Vlog No Copyright Music.\nVideo Link: https://youtu.be/KzQiRABVARk\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/EjZlLJrQWkI/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/EjZlLJrQWkI/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/EjZlLJrQWkI/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 104,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "EjZlLJrQWkI"
        }
      },
      "contentDetails": {
        "videoId": "EjZlLJrQWkI",
        "videoPublishedAt": "2019-01-25T01:49:32Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "uJxOyHCIXPGFLciS7Yfh4l8LhNo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44M0Q5MzQ0QTcwQzFDMjc5",
      "snippet": {
        "publishedAt": "2019-10-01T04:11:21Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Animals videos 2019 - try not to laugh compilation",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nFunny and Cute Animals videos 2019 - try not to laugh compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/EXtO2jLS3wA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/EXtO2jLS3wA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/EXtO2jLS3wA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 105,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "EXtO2jLS3wA"
        }
      },
      "contentDetails": {
        "videoId": "EXtO2jLS3wA",
        "videoPublishedAt": "2019-10-01T04:14:34Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Ck_l2WWmQlOtof5W-ZC0gtB5K4I",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wMEMyQTBBOTUwNTM0OUFG",
      "snippet": {
        "publishedAt": "2019-10-08T01:57:28Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cutest and Funniest Animals 2019 - So funny videos",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCutest and Funniest Animals 2019 - So funny videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/bc75fg26icY/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/bc75fg26icY/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/bc75fg26icY/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 106,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "bc75fg26icY"
        }
      },
      "contentDetails": {
        "videoId": "bc75fg26icY",
        "videoPublishedAt": "2019-10-08T02:01:15Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "bbnMoVpIG24JbibtpfLgzVMZWy8",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5FQjcyRDZBMEMyNTY3OTdE",
      "snippet": {
        "publishedAt": "2019-10-15T00:46:36Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "💗Aww - Cute Dog and Cat Compilation 2019💗",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAww - Cute Dog and Cat Compilation 2019\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/y0fobFVTMyM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/y0fobFVTMyM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/y0fobFVTMyM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/y0fobFVTMyM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/y0fobFVTMyM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 107,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "y0fobFVTMyM"
        }
      },
      "contentDetails": {
        "videoId": "y0fobFVTMyM",
        "videoPublishedAt": "2019-10-15T00:49:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "gy8HVyG8Qka7qk4KhyaySJT2Lp0",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44REI4QUZDRDI5MDc4Q0NF",
      "snippet": {
        "publishedAt": "2019-10-22T01:58:55Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Awesome Funny Pet Animals Life Video - Funny Animal Fails Compilation 2019",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAwesome Funny Pet Animals Life Video - Funny Animal Fails Compilation 2019\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/fj1fpfq4RkM/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/fj1fpfq4RkM/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/fj1fpfq4RkM/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/fj1fpfq4RkM/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/fj1fpfq4RkM/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 108,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "fj1fpfq4RkM"
        }
      },
      "contentDetails": {
        "videoId": "fj1fpfq4RkM",
        "videoPublishedAt": "2019-10-22T02:00:51Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "gy30hBsim-HbzBOS1Tl10ik8Vc4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC40ODU2MTBGM0M5MkIwQzU0",
      "snippet": {
        "publishedAt": "2019-10-30T10:59:59Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny and Cute Kittens videos 2019 - Funny Kitten Cats compilation",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nFunny and Cute Kittens videos 2019 - Funny Kitten Cats compilation\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/8VUKFprXAs4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/8VUKFprXAs4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/8VUKFprXAs4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/8VUKFprXAs4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/8VUKFprXAs4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 109,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "8VUKFprXAs4"
        }
      },
      "contentDetails": {
        "videoId": "8VUKFprXAs4",
        "videoPublishedAt": "2019-10-30T11:02:50Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "vkkFQ87Jsf9wPwDTwanRsWpsOZM",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC42RDgxQ0M2OUIwREZCNjZF",
      "snippet": {
        "publishedAt": "2019-11-21T03:44:00Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Fun and Fails - funny dogs and cats fails - Funniest Fails",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/vg2WldpDi60/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/vg2WldpDi60/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/vg2WldpDi60/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/vg2WldpDi60/sddefault.jpg",
            "width": 640,
            "height": 480
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 110,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "vg2WldpDi60"
        }
      },
      "contentDetails": {
        "videoId": "vg2WldpDi60",
        "videoPublishedAt": "2019-11-21T03:45:47Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "PB9WAdPBSh8proQQFlO0dJngZik",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC40MzEwNkU4RUE0MjhBRjg4",
      "snippet": {
        "publishedAt": "2019-11-28T08:23:03Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "I'm 100% sure you will want a kittens",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nI'm 100% sure you will want a kittens\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/On3jJtw-SXU/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/On3jJtw-SXU/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/On3jJtw-SXU/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/On3jJtw-SXU/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/On3jJtw-SXU/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 111,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "On3jJtw-SXU"
        }
      },
      "contentDetails": {
        "videoId": "On3jJtw-SXU",
        "videoPublishedAt": "2019-11-28T08:26:09Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "UuHAvDktDLJJGAg7hEXfLQ33168",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5DODY2Qzc5Mzc1QkZEQ0NF",
      "snippet": {
        "publishedAt": "2019-12-06T12:45:10Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Puppies Doing Funny Things 2019 - Cutest Dogs",
        "description": "Cute Puppies Doing Funny Things 2019 - Cutest Dogs\n\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/paulIfvxvcE/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/paulIfvxvcE/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/paulIfvxvcE/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/paulIfvxvcE/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/paulIfvxvcE/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 112,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "paulIfvxvcE"
        }
      },
      "contentDetails": {
        "videoId": "paulIfvxvcE",
        "videoPublishedAt": "2019-12-06T12:48:03Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "4v7fCinFJCdl67BDQ8zYtNo6GIc",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC44NzQ1OTI1OUFFM0NFRTc5",
      "snippet": {
        "publishedAt": "2019-12-12T04:52:05Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Dogs and Cats Doing Funny Things 2019 - Cutest Dogs",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCute Dogs and Cats Doing Funny Things 2019 - Cutest Dogs\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/KEan8eEl6ac/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/KEan8eEl6ac/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/KEan8eEl6ac/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/KEan8eEl6ac/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/KEan8eEl6ac/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 113,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "KEan8eEl6ac"
        }
      },
      "contentDetails": {
        "videoId": "KEan8eEl6ac",
        "videoPublishedAt": "2019-12-12T04:54:14Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "RWEdz8G83skmqvOiHhsjLfQZptQ",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CMDk1Q0MxREYyOTVEOTZF",
      "snippet": {
        "publishedAt": "2019-12-21T02:38:24Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Watch 1 minute of fun all day - Funny Videos",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nWatch 1 minute of fun all day - Funny Videos\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/cQcjNx_3mbo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/cQcjNx_3mbo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/cQcjNx_3mbo/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 114,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "cQcjNx_3mbo"
        }
      },
      "contentDetails": {
        "videoId": "cQcjNx_3mbo",
        "videoPublishedAt": "2019-12-21T02:40:14Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "XCO0VZIGJd-aDc6mCnsX_ESHEI4",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC43RjdBQTMwNUUwRTA1QkE3",
      "snippet": {
        "publishedAt": "2019-12-28T03:10:20Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cats and Dogs Videos Compilation (2019) Perros y Gatos Recopilación",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nFunny Cats and Dogs Videos Compilation (2019) Perros y Gatos Recopilación\n\nCats are cute and funny. Dogs are awesome. Check out these cute cats and funny dogs in this cute and funny cats & dogs videos compilation.\nLos gatos son lindos y adorables. Los perros son increíbles. Vea esta divertida recopilación de graciosos vídeos de gatos y perros.\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/sd5whuoSKoQ/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/sd5whuoSKoQ/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/sd5whuoSKoQ/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/sd5whuoSKoQ/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/sd5whuoSKoQ/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 115,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "sd5whuoSKoQ"
        }
      },
      "contentDetails": {
        "videoId": "sd5whuoSKoQ",
        "videoPublishedAt": "2019-12-28T03:12:47Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "Yz4XPlcI1lAfql3yXEesJiJjUiw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5GN0EwRkMxQTJGMTFCNDc1",
      "snippet": {
        "publishedAt": "2020-01-06T06:01:04Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cats and Funny Kitten videos compilation 2020",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCute Cats and Funny Kitten videos compilation 2020 \n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/U2MuYBUXcu4/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/U2MuYBUXcu4/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/U2MuYBUXcu4/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/U2MuYBUXcu4/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/U2MuYBUXcu4/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 116,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "U2MuYBUXcu4"
        }
      },
      "contentDetails": {
        "videoId": "U2MuYBUXcu4",
        "videoPublishedAt": "2020-01-06T06:03:01Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "iA4CXreSEjwaUBtRMphpve3N1nw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5ENUI5OTFCQkYxNDUxQjQ3",
      "snippet": {
        "publishedAt": "2020-01-13T13:13:00Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Funny Cats and Dogs Videos Compilation 2020 - Funniest Dogs and Cats",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nFunny Cats and Dogs Videos Compilation 2020 - Funniest Dogs and Cats\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/jjtB-IIC-WA/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/jjtB-IIC-WA/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/jjtB-IIC-WA/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 117,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "jjtB-IIC-WA"
        }
      },
      "contentDetails": {
        "videoId": "jjtB-IIC-WA",
        "videoPublishedAt": "2020-01-13T13:14:45Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "8tHIuDTmJ3xnmFVlnKYVdwTGOCE",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5CRjBFOTUzQTE4Mjg3RUJF",
      "snippet": {
        "publishedAt": "2020-01-19T01:31:18Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "So many cute kittens videos compilation 2020 #3",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\n►Worldwide FREE Shipping\n►No RX Required\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nSo many cute kittens videos compilation 2020 #3\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/T7bsV2AW1mg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/T7bsV2AW1mg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/T7bsV2AW1mg/hqdefault.jpg",
            "width": 480,
            "height": 360
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 118,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "T7bsV2AW1mg"
        }
      },
      "contentDetails": {
        "videoId": "T7bsV2AW1mg",
        "videoPublishedAt": "2020-01-19T01:33:55Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "HxlCpbji-1z6UcuggJ4OT8STFVw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC41QTQ4QTIyM0Y1RTBGMUNE",
      "snippet": {
        "publishedAt": "2020-01-28T07:47:56Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "💗 your heart will melt when watching this video - Cutest Kiteens",
        "description": "your heart will melt when watching this video - Cutest Kiteens\n\n►Subscribe for new video:  http://goo.gl/Koxcb0\n►Fanpage: http://goo.gl/8JZskX\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAmazing playlist video on Funny Animals Channel:\n\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\n►Funny Cats Video➞https://goo.gl/0HDKWJ\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\n►Funny Animals➞https://goo.gl/JYX2xX\n►Touching Video➞https://goo.gl/dFNJAx\n►Cute Dogs Video➞https://goo.gl/IMSIue\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nAudio Library — Music for content creators:\nhttps://www.youtube.com/channel/UCht8...\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \nhttps://creativecommons.org/licenses/by/3.0/\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/IhahjPruUbo/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/IhahjPruUbo/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/IhahjPruUbo/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/IhahjPruUbo/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/IhahjPruUbo/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 119,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "IhahjPruUbo"
        }
      },
      "contentDetails": {
        "videoId": "IhahjPruUbo",
        "videoPublishedAt": "2020-01-28T07:53:10Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "F310ULfm2b_UV65JvhYyN56PxnU",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wQjA4QkVEQ0RFREIzMjFC",
      "snippet": {
        "publishedAt": "2020-02-26T09:42:29Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cat and kittens doing funny thing compilation 2020",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\r\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\r\n►Worldwide FREE Shipping\r\n►No RX Required\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCute Cat and kittens doing funny thing compilation 2020\n\r\n►Subscribe for new video:  http://goo.gl/Koxcb0\r\n►Fanpage: http://goo.gl/8JZskX\r\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAmazing playlist video on Funny Animals Channel:\r\n\r\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\r\n►Funny Cats Video➞https://goo.gl/0HDKWJ\r\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\r\n►Funny Animals➞https://goo.gl/JYX2xX\r\n►Touching Video➞https://goo.gl/dFNJAx\r\n►Cute Dogs Video➞https://goo.gl/IMSIue\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAudio Library — Music for content creators:\r\nhttps://www.youtube.com/channel/UCht8...\r\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \r\nhttps://creativecommons.org/licenses/by/3.0/\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 120,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "bfV8EeSR9wg"
        }
      },
      "contentDetails": {
        "videoId": "bfV8EeSR9wg",
        "videoPublishedAt": "2020-02-26T09:48:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "FbKYfH1u5JSYQA26MgKuM9yG2tw",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC4wNjIzRDA1OTQ2M0UyODEw",
      "snippet": {
        "publishedAt": "2020-02-26T09:42:48Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "Cute Cat and kittens doing funny thing compilation 2020",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\r\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\r\n►Worldwide FREE Shipping\r\n►No RX Required\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nCute Cat and kittens doing funny thing compilation 2020\n\r\n►Subscribe for new video:  http://goo.gl/Koxcb0\r\n►Fanpage: http://goo.gl/8JZskX\r\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAmazing playlist video on Funny Animals Channel:\r\n\r\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\r\n►Funny Cats Video➞https://goo.gl/0HDKWJ\r\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\r\n►Funny Animals➞https://goo.gl/JYX2xX\r\n►Touching Video➞https://goo.gl/dFNJAx\r\n►Cute Dogs Video➞https://goo.gl/IMSIue\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAudio Library — Music for content creators:\r\nhttps://www.youtube.com/channel/UCht8...\r\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \r\nhttps://creativecommons.org/licenses/by/3.0/\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/bfV8EeSR9wg/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 121,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "bfV8EeSR9wg"
        }
      },
      "contentDetails": {
        "videoId": "bfV8EeSR9wg",
        "videoPublishedAt": "2020-02-26T09:48:00Z"
      }
    },
    {
      "kind": "youtube#playlistItem",
      "etag": "3hchzgSKnI7ToQpRbBcC1HZ9qeo",
      "id": "UExENzJZbHotWTAxdmNHVFltRWFOOW56MDJvMHlaTVd5OC5EQTdFNDU3M0Y3MTM1QjlG",
      "snippet": {
        "publishedAt": "2020-03-10T12:09:45Z",
        "channelId": "UCq5hgY37WAryZCwmehDyCaQ",
        "title": "life before and after love",
        "description": "✈✈✈Shop Pet Medicines : https://anipetshop.com\r\n           ©BUY NOW : Bravecto, Nexgard, Heartgard, Revolution,.....\r\n►Worldwide FREE Shipping\r\n►No RX Required\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\nlife before and after love\n\r\n►Subscribe for new video:  http://goo.gl/Koxcb0\r\n►Fanpage: http://goo.gl/8JZskX\r\n►Thanks For Watching ! Please Like Share & Comment If You Like This Video ! \r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAmazing playlist video on Funny Animals Channel:\r\n\r\n►Funny Dogs Compilation➞https://goo.gl/29ZcCa\r\n►Funny Cats Video➞https://goo.gl/0HDKWJ\r\n►Funny Dogs and Babies➞https://goo.gl/Y6jp3b\r\n►Funny Animals➞https://goo.gl/JYX2xX\r\n►Touching Video➞https://goo.gl/dFNJAx\r\n►Cute Dogs Video➞https://goo.gl/IMSIue\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nAudio Library — Music for content creators:\r\nhttps://www.youtube.com/channel/UCht8...\r\nCreative Commons — Attribution 3.0 Unported— CC BY 3.0 \r\nhttps://creativecommons.org/licenses/by/3.0/\r\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\r\nCOPYRIGHT ISSUES: Our purpose, when making COMPILATIONS, is NOT to steal other people's videos, but to share those in quality compilation with other people. If any owner of clips, used in our compilation, has a copyright issue, feel free to contact us by personal message and add title COPYRIGHT ISSUE. We will remove the video, Thank you. Gmail: mrbeanwow@gmail.com",
        "thumbnails": {
          "default": {
            "url": "https://i.ytimg.com/vi/-UDcDPmwHUc/default.jpg",
            "width": 120,
            "height": 90
          },
          "medium": {
            "url": "https://i.ytimg.com/vi/-UDcDPmwHUc/mqdefault.jpg",
            "width": 320,
            "height": 180
          },
          "high": {
            "url": "https://i.ytimg.com/vi/-UDcDPmwHUc/hqdefault.jpg",
            "width": 480,
            "height": 360
          },
          "standard": {
            "url": "https://i.ytimg.com/vi/-UDcDPmwHUc/sddefault.jpg",
            "width": 640,
            "height": 480
          },
          "maxres": {
            "url": "https://i.ytimg.com/vi/-UDcDPmwHUc/maxresdefault.jpg",
            "width": 1280,
            "height": 720
          }
        },
        "channelTitle": "Funny Videos",
        "playlistId": "PLD72Ylz-Y01vcGTYmEaN9nz02o0yZMWy8",
        "position": 122,
        "resourceId": {
          "kind": "youtube#video",
          "videoId": "-UDcDPmwHUc"
        }
      },
      "contentDetails": {
        "videoId": "-UDcDPmwHUc",
        "videoPublishedAt": "2020-03-10T12:37:28Z"
      }
    }
  ],
  "pageInfo": {
    "totalResults": 123,
    "resultsPerPage": 50
  }
}

    http_version: null
  recorded_at: Mon, 11 May 2020 22:31:00 GMT
recorded_with: VCR 5.1.0
